性能优化和缓存技术
缓存一直以来都是用来提高性能的一项必不可少的技术，利用这项技术可以很好地提高Web的性能。
缓存可以很有效地降低网络地时延，同时也会减少大量请求对于服务器地压力。
WEB领域中缓存地一些知识点和应用：

从HTTP协议说起，
由于整个网络服务都是基于HTTP协议地，因此先来介绍一下HTTP协议当中定义地缓存机制。
HTTP协议只要是通过请求头当中地一些字段来和服务器进行通信，从而采取不同地缓存策略。

一般来说，对于一个完整地HTTP GET请求缓存过程会包含七个主要的步骤：
1.从接收网络请求开始
2.客户端会读取请求报文并且对报文进行解析，进而提取URL和各种首部
3.然后将会查询是否在本地有副本，如果本地没有副本就会从服务器上获取一份副本并且保存在本地
4.接着会进行查看副本是否足够新鲜（新鲜度检测），如果缓存已经失效就会 询问服务器是否有任何更新
5.服务器就会用新的首部和已缓存的主体来构建一条响应报文
6.最后发送给客户端
7.根据服务器的不同，会可选地选择创建日志记录该过程


强缓存和协商缓存


强缓存主要是采用响应头中的Cache-Control和Expires两个字段进行控制的。其中Expires是HTTP 1.0中定义的，它指定了一个绝对的过期时期。而Cache-Control是HTTP 1.1时出现的缓存控制字段。Cache-Control:max-age定义了一个最大使用期，就是从第一次生成文档到缓存不再生效的合法生存日期。由于Expires是HTTP1.0时代的产物，因此设计之初就存在着一些缺陷，如果本地时间和服务器时间相差太大，就会导致缓存错乱。这两个字段同时使用的时候Cache-Control的优先级给更高一点。
这两个字段的效果是类似的，客户端都会通过对比本地时间和服务器生存时间来检测缓存是否可用。如果缓存没有超出它的生存时间内，客户端就会直接采用本地的缓存。如果生存日期已经过了，这个缓存也就宣告失效。接着客户端将再次与服务器进行通信来验证这个缓存是否需要更新。

强缓存机制如果检测到缓存失效，就需要进行服务器再验证。这种缓存机制也称作协商缓存。

